/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/bicicletarios": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    detalhado?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Bicicletario"][];
                        "application/json": components["schemas"]["Bicicletario"][];
                        "text/json": components["schemas"]["Bicicletario"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RequestCreateBicicletario"];
                    "text/json": components["schemas"]["RequestCreateBicicletario"];
                    "application/*+json": components["schemas"]["RequestCreateBicicletario"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bicicletarios/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bicicletas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    perdidas?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BicicletaPonto"][];
                        "application/json": components["schemas"]["BicicletaPonto"][];
                        "text/json": components["schemas"]["BicicletaPonto"][];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Bicicleta"];
                    "text/json": components["schemas"]["Bicicleta"];
                    "application/*+json": components["schemas"]["Bicicleta"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Bicicleta"];
                    "text/json": components["schemas"]["Bicicleta"];
                    "application/*+json": components["schemas"]["Bicicleta"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bicicletas/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BicicletaPonto"];
                        "application/json": components["schemas"]["BicicletaPonto"];
                        "text/json": components["schemas"]["BicicletaPonto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ciclistas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BicicletaPonto"][];
                        "application/json": components["schemas"]["BicicletaPonto"][];
                        "text/json": components["schemas"]["BicicletaPonto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/emprestimos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    aberto?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Emprestimo"][];
                        "application/json": components["schemas"]["Emprestimo"][];
                        "text/json": components["schemas"]["Emprestimo"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/emprestimos/fechar": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RequestFecharEmprestimo"];
                    "text/json": components["schemas"]["RequestFecharEmprestimo"];
                    "application/*+json": components["schemas"]["RequestFecharEmprestimo"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Emprestimo"][];
                        "application/json": components["schemas"]["Emprestimo"][];
                        "text/json": components["schemas"]["Emprestimo"][];
                    };
                };
            };
        };
        trace?: never;
    };
    "/interno/emprestimos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RequesicaoEmprestimo"];
                    "text/json": components["schemas"]["RequesicaoEmprestimo"];
                    "application/*+json": components["schemas"]["RequesicaoEmprestimo"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["RespostaSolicitacaoEmprestimo"];
                        "application/json": components["schemas"]["RespostaSolicitacaoEmprestimo"];
                        "text/json": components["schemas"]["RespostaSolicitacaoEmprestimo"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interno/ponto/bicicleta": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RequestDevolucao"];
                    "text/json": components["schemas"]["RequestDevolucao"];
                    "application/*+json": components["schemas"]["RequestDevolucao"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/mantenedores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Mantenedor"][];
                        "application/json": components["schemas"]["Mantenedor"][];
                        "text/json": components["schemas"]["Mantenedor"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Mantenedor"];
                    "text/json": components["schemas"]["Mantenedor"];
                    "application/*+json": components["schemas"]["Mantenedor"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["AtualizarMantenedor"];
                    "text/json": components["schemas"]["AtualizarMantenedor"];
                    "application/*+json": components["schemas"]["AtualizarMantenedor"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/mantenedores/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Mantenedor"];
                        "application/json": components["schemas"]["Mantenedor"];
                        "text/json": components["schemas"]["Mantenedor"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/penalidades": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Penalidade"][];
                        "application/json": components["schemas"]["Penalidade"][];
                        "text/json": components["schemas"]["Penalidade"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RequestPerdoarPenalidade"];
                    "text/json": components["schemas"]["RequestPerdoarPenalidade"];
                    "application/*+json": components["schemas"]["RequestPerdoarPenalidade"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/penalidades/manual": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["NovaPenalidadeManual"];
                    "text/json": components["schemas"]["NovaPenalidadeManual"];
                    "application/*+json": components["schemas"]["NovaPenalidadeManual"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pontos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id_bicicletario?: number;
                    status?: components["schemas"]["StatusPontoId"][];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PontoInfo"][];
                        "application/json": components["schemas"]["PontoInfo"][];
                        "text/json": components["schemas"]["PontoInfo"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["NovoPonto"];
                    "text/json": components["schemas"]["NovoPonto"];
                    "application/*+json": components["schemas"]["NovoPonto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["AtualizacaoPonto"];
                    "text/json": components["schemas"]["AtualizacaoPonto"];
                    "application/*+json": components["schemas"]["AtualizacaoPonto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/pontos/{bicicletario_id}/{ponto_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    bicicletario_id: number;
                    ponto_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["PontoInfo"];
                        "application/json": components["schemas"]["PontoInfo"];
                        "text/json": components["schemas"]["PontoInfo"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tipo-penalidade": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TipoPenalidade"][];
                        "application/json": components["schemas"]["TipoPenalidade"][];
                        "text/json": components["schemas"]["TipoPenalidade"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tipo-penalidade/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TipoPenalidade"];
                        "application/json": components["schemas"]["TipoPenalidade"];
                        "text/json": components["schemas"]["TipoPenalidade"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AtualizacaoPonto: {
            /** Format: int32 */
            bicicletario_id?: number;
            /** Format: int32 */
            ponto_id?: number;
            status?: string | null;
        };
        AtualizarMantenedor: {
            /** Format: int32 */
            id?: number;
            nome?: string | null;
            cargo_id?: components["schemas"]["CargoId"];
        };
        Bicicleta: {
            /** Format: int32 */
            id?: number;
            status?: components["schemas"]["StatusBicicletaId"];
        };
        BicicletaPonto: {
            /** Format: int32 */
            id?: number;
            status?: components["schemas"]["StatusBicicletaId"];
            /** Format: int32 */
            bicicletario?: number | null;
            /** Format: int32 */
            ponto?: number | null;
        };
        Bicicletario: {
            /** Format: int32 */
            id?: number;
            /** Format: double */
            localizacao_latitude?: number;
            /** Format: double */
            localizacao_longitude?: number;
            desativado?: boolean;
            pontos?: components["schemas"]["BicicletarioPonto"][] | null;
        };
        BicicletarioPonto: {
            /** Format: int32 */
            ponto?: number;
            status_ponto_id?: components["schemas"]["StatusPontoId"];
            /** Format: int32 */
            bicicleta?: number | null;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        CargoId: 1 | 2 | 3 | 4;
        Emprestimo: {
            /** Format: int32 */
            ciclista_ra?: number;
            /** Format: date-time */
            emprestimo_inicio?: string;
            /** Format: date-time */
            emprestimo_fim?: string | null;
            /** Format: int32 */
            bicicletario_id_devolvido?: number | null;
            /** Format: int32 */
            bicicletario_id_tirado?: number;
            /** Format: int32 */
            bicicleta_id?: number;
        };
        Mantenedor: {
            /** Format: int32 */
            mantenedor_id?: number;
            cargo?: components["schemas"]["CargoId"];
            nome?: string | null;
        };
        NovaPenalidadeManual: {
            /** Format: int32 */
            mantenedor_id_aplicador?: number;
            /** Format: int32 */
            tipo_penalidade_id?: number;
            /** Format: date-time */
            penalidade_fim?: string | null;
            /** Format: int32 */
            ciclista_ra?: number;
            /** Format: date-time */
            emprestimo_inicio?: string;
            detalhes?: string | null;
        };
        NovoPonto: {
            /** Format: int32 */
            bicicletario_id?: number;
            /** Format: int32 */
            ponto_id?: number;
            status_ponto_id?: components["schemas"]["StatusPontoId"];
        };
        Penalidade: {
            /** Format: date-time */
            penalidade_inicio?: string;
            /** Format: date-time */
            penalidade_fim?: string | null;
            /** Format: int32 */
            ciclista_ra?: number;
            /** Format: date-time */
            emprestimo_inicio?: string;
            /** Format: int32 */
            tipo_penalidade_id?: number;
            detalhes?: string | null;
            /** Format: int32 */
            mantenedor_id_aplicador?: number | null;
            /** Format: int32 */
            mantenedor_id_perdoador?: number | null;
            penalidade_automatica?: boolean;
            motivacao_perdao?: string | null;
        };
        PontoInfo: {
            /** Format: int32 */
            bicicletario?: number;
            /** Format: int32 */
            ponto?: number;
            status_ponto?: components["schemas"]["StatusPontoId"];
            /** Format: int32 */
            bicicleta?: number | null;
            status_bicicleta?: components["schemas"]["StatusBicicletaId"];
        };
        RequesicaoEmprestimo: {
            /** Format: int32 */
            bicicletario?: number;
            /** Format: int32 */
            ra_aluno?: number;
        };
        RequestCreateBicicletario: {
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        RequestDevolucao: {
            /** Format: int32 */
            bicicleta_id?: number;
            /** Format: int32 */
            bicicletario_id?: number;
            /** Format: int32 */
            ponto_id?: number;
        };
        RequestFecharEmprestimo: {
            /** Format: int32 */
            ciclista_ra?: number;
            /** Format: date-time */
            emprestimo_inicio?: string;
            perda_bicicleta?: boolean;
        };
        RequestPerdoarPenalidade: {
            /** Format: int32 */
            ciclista_ra?: number;
            /** Format: date-time */
            emprestimo_inicio?: string;
            /** Format: date-time */
            penalidade_inicio?: string;
            /** Format: int32 */
            mantenedor_id_perdoador?: number;
            motivacao_perdao?: string | null;
        };
        RespostaSolicitacaoEmprestimo: {
            status?: components["schemas"]["StatusSolicitacoaEmprestimo"];
            /** Format: int32 */
            ponto?: number | null;
            /** Format: int32 */
            bicicleta?: number | null;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        StatusBicicletaId: 1 | 2 | 3 | 4 | 5;
        /**
         * Format: int32
         * @enum {integer}
         */
        StatusPontoId: 1 | 2 | 3 | 4;
        /**
         * Format: int32
         * @enum {integer}
         */
        StatusSolicitacoaEmprestimo: 1 | 2 | 3 | 4;
        TipoPenalidade: {
            /** Format: int32 */
            tipo_penalidade_id?: number;
            nome?: string | null;
            descricao?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
